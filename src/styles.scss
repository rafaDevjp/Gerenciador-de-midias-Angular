@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$candy-app-theme: mat-light-theme((
  color: (
    primary: $candy-app-primary,
    accent: $candy-app-accent,
    warn: $candy-app-warn,
    
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

body{
  padding: 0%;
  margin: 0px;
}

.logo-style{
  color: rgb(122, 122, 122);
  font-size: 30px;
  font-weight: 700;
}
.logo-style-mini{
  color: rgb(122, 122, 122);
  font-size: 20px;
  font-weight: 700;
}

.drop-zone{
  position: absolute;
  top: 50%;
}

.mat-success {
  background-color: rgb(122, 231, 122);
  color: #fff;
}
.mat-customs{
  background-color: rgb(0, 152, 240);
  color: #fff;
}



